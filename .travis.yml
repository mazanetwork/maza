# errata:
# - A travis bug causes caches to trample eachother when using the same
#   compiler key (which we don't use anyway). This is worked around for now by
#   replacing the "compilers" with a build name prefixed by the no-op ":"
#   command. See: https://github.com/travis-ci/travis-ci/issues/4393
# - sudo/dist/group are set so as to get Blue Box VMs, necessary for [loopback]
#   IPv6 support

sudo: required
dist: trusty
group: deprecated-2017Q3

stages:
  - prepcache
  - test

os: linux
language: generic

services:
  - docker

cache:
  apt: true
  ccache: true
  directories:
    - depends/built
    - depends/sdk-sources
    - $HOME/.ccache


env:
  global:
    # DOCKER_HUB_USER
  - secure: NtPv0M7iqqwe1RYmezmF22jPm8aXRPZH0MODGNHm4424jb5Tor+1lJKUMp+5197JUmG8y4yA/BLATfhRrlQ9Dr9L0EKD5RNkBU7srLLgB/mZCoqIG45+D3SDWO8raCLdgqekd43K6MXpLSbtgdoFm96wZwpfE9MQGe7uKOr4JeKbdobNT4Bb4oxDnCuBU0KWW0EiQqYjblRQvhxTLiCoEbemN2dL/I0/tBAlyC5kWDl531/6NHKtgbcp1mP9gY6BhgSq9LDkvXeMmKx3praAebdtG+we3basiH8YPcGDzU0QSQBTOenyZqjCA/zwrzGrLfa5czfZjw6/X6/NV9CCrIoMqnG8O+PFhkegvA5TiwP+q6kjsFjYZv5SyzSMX7FM4rALrlLcGTI52p7vysBpLAIgi6w/QlYJPURT+1AcTKFic7tef29KDcrF6kPCY9nNd475goag+e45tPSQVZkfdvG+NyhENjkpx3QQaJWfGBuZcIaztjaLGJ10tZeU0sV76Aa53aXqpLHfyRuvl+nmLw8aLq+BxlWjZ0BGAhs2da2e92ADCdsZcEmhQGb2UfL6x8bqcaBVLxeBhD3xp+VyrtXf9Cip1yDyFqGNxHxwnAN15JMGAzWTlxDK1ppUrXp7Bgr5IV4lzYCWysxDmbQPMHaTC2ut3em5t7W9xhHf+no=
    # DOCKER_HUB_PASSWORD
    - secure: W73SSENUYrQ/H2dzrcFKAMe1SqkAUXs2fvqVbP86ukw9LMm7yP4IT8/9NiQrFqxZaMePhD14/hfejb5MgoVBZMTXIihrH+WG7iPcezrDBbUmDb4DeHSABs4H7BfuUlw9F8/b4lTfudxjfn9XCh01eED7XM7asUkzX8mKcT5hroKW7sVDmoMXOiwtWq4xzpHYuuRFFuQE/Lvlr/r1aECAppXkwa8W5uIUgKn9Nrhz4JR/f8L+EBNOBS0UwblAoiU+QfD7px7niIO/l1qBcaaihVHpaGt6s2+YVQ1GlhfUUbSKjsNIv1o761LmuHc0w6pMFGLy4c/US9QKzWDYN+qzZxzPPIonWrZ4jXfEsDvX56Uw7h7OHl8/K28yX3vEXLiWttIrEMNfT5H/HkDqFEc5KQOXuVKuW1czyabqP2zVGFVzXEmgeTuGJHCs245yChKr8GoKAQA8RM2869ZOuNfbxTAXmlCZRspU9YHZ9QYw0OrUfpQFFZVHoDdCnziNoKVFuBt+DUdPaKxxtZnUhFt5dXyyMj9CK9ywmCPIuqnJ2YU0KakwPm0zczojeexZvRraAaCHqyKV5ewx0l+SllQfpg7G9UWlq6gFodUuuEMSN/hssWMXoyqe0iLRD52veftFvOxdgMQCkrYFnzeoipsRoAwiBfh6uuoLr1YfNM4mNt4=
    # OSXSDK_PASSWORD
      - secure: nhJpIICvP5GEFZx7FsczM3GfAwDcyAuW0afJhBI0fi+TblCLL6WuiCOjFRC9I0TGR6W8JGuUIkXixNi7cm0PqUuv+1gPzXW9JXR/4oXkgG+8Sy7n/8l9DWNLVDWtcss9m/BsgchQTFuWECSeY26yhJcizy01xh/d1Czgi/49JtLSzz4KbOu+BsZOgecFzGg2u8BAdOX305SA2TO9neUkXgZsXse0GyHjUHPuMTx0XNQjEC3rgcXTigCr2/x4rHaTWjblgidoDD2b30mvzUvJ9yEYR52/ohJ+dEpLo7o8RPMJe3QeIX6QrNOGWww/6hWDZNu1zStSWbYT/xlvL/U1OZakiuQHi7e2IiL668WV0/W1/OtEu/Iu/UDv9hGezuK9hqOa63P+OJBqDu0LMgODY9Of25agMpXgB6C+uBFylq5KRlG7VuGxSAqk3Z8ynXEhOwEMJ166KPtPgr2rolPhImnbt8EvJp1ckYb+RwZDGB9HSwYcgU8LEw3FFWqY9cqe8/QR1d0/7GkMLAEC/xtwP8dtQW8jCxacD5csKLSTRsbpcYVV0VTVeddAHxU8hzkcVTjK0IMSsbC4k4x5iFxBJtL+SDrPb8GULFjEPmH4oaBJ//22ntHlvOHoLqmk/dh2/LFR9oANDrn2nbSGCRu7tx9SlWKR5yXNCNW0XozmofU=

    - MAKEJOBS=-j5
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=400M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://github.com/mazanetwork/maza-dependency-sources/raw/master/sdk-sources/
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
    - DOCKER_BUILD=false

  matrix:
# No wallet
    - CACHE_NAME=NoWallet HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="python3" DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Cross-Mac
    - CACHE_NAME=CrossMac HOST=x86_64-apple-darwin11 PPA="ppa:bitcoin/bitcoin" PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"
# mazad
    - CACHE_NAME=mazad HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_MAZA_DEBUG" PYZMQ=true
# Win32
    - CACHE_NAME=Win32 HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
# 32-bit + maza
    - CACHE_NAME=32bitlinux_binmaza HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash" PYZMQ=true
# Win64
    - CACHE_NAME=Win64 HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
# ARM
    - CACHE_NAME=ARM HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports" 
# mazad release build (for docker)
    - CACHE_NAME=mazad_release HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1" GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" PYZMQ=true DOCKER_BUILD=true

before_install:
    - git clone https://github.com/mazanetwork/maza_hash
    - travis_retry sudo apt-get install python3-pip python3-dev
    - travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
    - if [ "$PYZMQ" = "true" ]; then pip3 install pyzmq --user ; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
    - cd maza_hash && python3 setup.py install --user && cd ..
before_script:
    - unset CC; unset CXX
    - unset DISPLAY
    # Make sure stdout is in blocking mode. Otherwise builds will fail due to large writes to stdout
    # See https://github.com/travis-ci/travis-ci/issues/4704. If this gets fixed, this line can also be removed.
    - python3 -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
    #- if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi TODO reenable after all Bitcoin PRs have been merged and docs fully fixed
    - mkdir -p depends/SDKs depends/sdk-sources
    -  if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz.gpg -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg && gpg --passphrase $OSXSDK_PASSWORD --symmetric --output depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg ;fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    # Deps should already be built, copies packages 
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - mkdir build && cd build
    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir VERSION=$HOST
    - cd mazanetwork-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - ( while true ; do echo "Travis Timeout Tweak" ; sleep 60 ; done & ) 
    - if [ "$RUN_TESTS" = "true" ]; then make $MAKEJOBS check VERBOSE=1; fi
# ORIG:    - if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi
    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
    - cd ../..
    - if [ "$DOCKER_BUILD" = "true" ]; then BUILD_DIR=build/mazanetwork-$HOST ./docker/build-docker.sh; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
after_success:
    - if [ "$TRAVIS_PULL_REQUEST" = "false" -a "$TRAVIS_BRANCH" = "develop" -a "$DOCKER_BUILD" = "true" ]; then docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD && ./docker/push-docker.sh; fi
jobs:
  include:
    - stage: prepcache
      env:
        - CACHE_NAME=NoWallet HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="python3" DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env:
        - CACHE_NAME=CrossMac HOST=x86_64-apple-darwin11 PPA="ppa:bitcoin/bitcoin" PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        -  if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz.gpg -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg && gpg --passphrase $OSXSDK_PASSWORD  --symmetric --output depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg ;fi
        - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env:
        - CACHE_NAME=mazad HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_MAZA_DEBUG" PYZMQ=true
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env:
        - CACHE_NAME=Win32 HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env: 
        - CACHE_NAME=32bitlinux_binmaza HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash" PYZMQ=true
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env: 
        - CACHE_NAME=Win64 HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        -  if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz.gpg -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg && gpg --passphrase $OSXSDK_PASSWORD  --symmetric --output depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz.gpg ;fi
        - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env:
        - CACHE_NAME=ARM HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports" 
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
    - stage: prepcache
      env:
        - CACHE_NAME=mazad_release HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1" GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" PYZMQ=true DOCKER_BUILD=true
      script: 
        - mkdir -p depends/SDKs depends/sdk-sources
        - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
